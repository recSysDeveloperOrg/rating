// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: idl/movie.proto

package movie

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecommendReasonType int32

const (
	RecommendReasonType_RECOMMEND_REASON_TYPE_TAG   RecommendReasonType = 0
	RecommendReasonType_RECOMMEND_REASON_TYPE_MOVIE RecommendReasonType = 1
	RecommendReasonType_RECOMMEND_REASON_TYPE_LOG   RecommendReasonType = 2
	RecommendReasonType_RECOMMEND_REASON_TYPE_TOP_K RecommendReasonType = 3
)

// Enum value maps for RecommendReasonType.
var (
	RecommendReasonType_name = map[int32]string{
		0: "RECOMMEND_REASON_TYPE_TAG",
		1: "RECOMMEND_REASON_TYPE_MOVIE",
		2: "RECOMMEND_REASON_TYPE_LOG",
		3: "RECOMMEND_REASON_TYPE_TOP_K",
	}
	RecommendReasonType_value = map[string]int32{
		"RECOMMEND_REASON_TYPE_TAG":   0,
		"RECOMMEND_REASON_TYPE_MOVIE": 1,
		"RECOMMEND_REASON_TYPE_LOG":   2,
		"RECOMMEND_REASON_TYPE_TOP_K": 3,
	}
)

func (x RecommendReasonType) Enum() *RecommendReasonType {
	p := new(RecommendReasonType)
	*p = x
	return p
}

func (x RecommendReasonType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecommendReasonType) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_movie_proto_enumTypes[0].Descriptor()
}

func (RecommendReasonType) Type() protoreflect.EnumType {
	return &file_idl_movie_proto_enumTypes[0]
}

func (x RecommendReasonType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecommendReasonType.Descriptor instead.
func (RecommendReasonType) EnumDescriptor() ([]byte, []int) {
	return file_idl_movie_proto_rawDescGZIP(), []int{0}
}

type MovieSearchEntryType int32

const (
	MovieSearchEntryType_MOVIE_SEARCH_ENTRY_TYPE_TITLE  MovieSearchEntryType = 0
	MovieSearchEntryType_MOVIE_SEARCH_ENTRY_TYPE_DETAIL MovieSearchEntryType = 1
)

// Enum value maps for MovieSearchEntryType.
var (
	MovieSearchEntryType_name = map[int32]string{
		0: "MOVIE_SEARCH_ENTRY_TYPE_TITLE",
		1: "MOVIE_SEARCH_ENTRY_TYPE_DETAIL",
	}
	MovieSearchEntryType_value = map[string]int32{
		"MOVIE_SEARCH_ENTRY_TYPE_TITLE":  0,
		"MOVIE_SEARCH_ENTRY_TYPE_DETAIL": 1,
	}
)

func (x MovieSearchEntryType) Enum() *MovieSearchEntryType {
	p := new(MovieSearchEntryType)
	*p = x
	return p
}

func (x MovieSearchEntryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MovieSearchEntryType) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_movie_proto_enumTypes[1].Descriptor()
}

func (MovieSearchEntryType) Type() protoreflect.EnumType {
	return &file_idl_movie_proto_enumTypes[1]
}

func (x MovieSearchEntryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MovieSearchEntryType.Descriptor instead.
func (MovieSearchEntryType) EnumDescriptor() ([]byte, []int) {
	return file_idl_movie_proto_rawDescGZIP(), []int{1}
}

type FeedbackType int32

const (
	FeedbackType_FEEDBACK_TYPE_MOVIE    FeedbackType = 0
	FeedbackType_FEEDBACK_TYPE_CATEGORY FeedbackType = 1
)

// Enum value maps for FeedbackType.
var (
	FeedbackType_name = map[int32]string{
		0: "FEEDBACK_TYPE_MOVIE",
		1: "FEEDBACK_TYPE_CATEGORY",
	}
	FeedbackType_value = map[string]int32{
		"FEEDBACK_TYPE_MOVIE":    0,
		"FEEDBACK_TYPE_CATEGORY": 1,
	}
)

func (x FeedbackType) Enum() *FeedbackType {
	p := new(FeedbackType)
	*p = x
	return p
}

func (x FeedbackType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeedbackType) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_movie_proto_enumTypes[2].Descriptor()
}

func (FeedbackType) Type() protoreflect.EnumType {
	return &file_idl_movie_proto_enumTypes[2]
}

func (x FeedbackType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeedbackType.Descriptor instead.
func (FeedbackType) EnumDescriptor() ([]byte, []int) {
	return file_idl_movie_proto_rawDescGZIP(), []int{2}
}

type BaseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrNo  int64  `protobuf:"varint,1,opt,name=err_no,json=errNo,proto3" json:"err_no,omitempty"`
	ErrMsg string `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
}

func (x *BaseResp) Reset() {
	*x = BaseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_movie_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResp) ProtoMessage() {}

func (x *BaseResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_movie_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResp.ProtoReflect.Descriptor instead.
func (*BaseResp) Descriptor() ([]byte, []int) {
	return file_idl_movie_proto_rawDescGZIP(), []int{0}
}

func (x *BaseResp) GetErrNo() int64 {
	if x != nil {
		return x.ErrNo
	}
	return 0
}

func (x *BaseResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type Participant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Character string `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Participant) Reset() {
	*x = Participant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_movie_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participant) ProtoMessage() {}

func (x *Participant) ProtoReflect() protoreflect.Message {
	mi := &file_idl_movie_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participant.ProtoReflect.Descriptor instead.
func (*Participant) Descriptor() ([]byte, []int) {
	return file_idl_movie_proto_rawDescGZIP(), []int{1}
}

func (x *Participant) GetCharacter() string {
	if x != nil {
		return x.Character
	}
	return ""
}

func (x *Participant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RecommendReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieReason *Movie              `protobuf:"bytes,1,opt,name=movie_reason,json=movieReason,proto3" json:"movie_reason,omitempty"`
	TagReason   string              `protobuf:"bytes,2,opt,name=tag_reason,json=tagReason,proto3" json:"tag_reason,omitempty"`
	ReasonType  RecommendReasonType `protobuf:"varint,3,opt,name=reason_type,json=reasonType,proto3,enum=RecommendReasonType" json:"reason_type,omitempty"`
}

func (x *RecommendReason) Reset() {
	*x = RecommendReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_movie_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendReason) ProtoMessage() {}

func (x *RecommendReason) ProtoReflect() protoreflect.Message {
	mi := &file_idl_movie_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendReason.ProtoReflect.Descriptor instead.
func (*RecommendReason) Descriptor() ([]byte, []int) {
	return file_idl_movie_proto_rawDescGZIP(), []int{2}
}

func (x *RecommendReason) GetMovieReason() *Movie {
	if x != nil {
		return x.MovieReason
	}
	return nil
}

func (x *RecommendReason) GetTagReason() string {
	if x != nil {
		return x.TagReason
	}
	return ""
}

func (x *RecommendReason) GetReasonType() RecommendReasonType {
	if x != nil {
		return x.ReasonType
	}
	return RecommendReasonType_RECOMMEND_REASON_TYPE_TAG
}

type Movie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string           `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	PicUrl        string           `protobuf:"bytes,3,opt,name=pic_url,json=picUrl,proto3" json:"pic_url,omitempty"`
	Introduction  *string          `protobuf:"bytes,4,opt,name=introduction,proto3,oneof" json:"introduction,omitempty"`
	Participant   []*Participant   `protobuf:"bytes,5,rep,name=participant,proto3" json:"participant,omitempty"`
	ReleaseDate   *string          `protobuf:"bytes,6,opt,name=release_date,json=releaseDate,proto3,oneof" json:"release_date,omitempty"`
	Language      *string          `protobuf:"bytes,7,opt,name=language,proto3,oneof" json:"language,omitempty"`
	Reason        *RecommendReason `protobuf:"bytes,8,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	AverageRating *float64         `protobuf:"fixed64,9,opt,name=average_rating,json=averageRating,proto3,oneof" json:"average_rating,omitempty"`
}

func (x *Movie) Reset() {
	*x = Movie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_movie_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Movie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Movie) ProtoMessage() {}

func (x *Movie) ProtoReflect() protoreflect.Message {
	mi := &file_idl_movie_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Movie.ProtoReflect.Descriptor instead.
func (*Movie) Descriptor() ([]byte, []int) {
	return file_idl_movie_proto_rawDescGZIP(), []int{3}
}

func (x *Movie) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Movie) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Movie) GetPicUrl() string {
	if x != nil {
		return x.PicUrl
	}
	return ""
}

func (x *Movie) GetIntroduction() string {
	if x != nil && x.Introduction != nil {
		return *x.Introduction
	}
	return ""
}

func (x *Movie) GetParticipant() []*Participant {
	if x != nil {
		return x.Participant
	}
	return nil
}

func (x *Movie) GetReleaseDate() string {
	if x != nil && x.ReleaseDate != nil {
		return *x.ReleaseDate
	}
	return ""
}

func (x *Movie) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *Movie) GetReason() *RecommendReason {
	if x != nil {
		return x.Reason
	}
	return nil
}

func (x *Movie) GetAverageRating() float64 {
	if x != nil && x.AverageRating != nil {
		return *x.AverageRating
	}
	return 0
}

type RecommendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RecommendReq) Reset() {
	*x = RecommendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_movie_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendReq) ProtoMessage() {}

func (x *RecommendReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_movie_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendReq.ProtoReflect.Descriptor instead.
func (*RecommendReq) Descriptor() ([]byte, []int) {
	return file_idl_movie_proto_rawDescGZIP(), []int{4}
}

func (x *RecommendReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RecommendReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *RecommendReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RecommendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp   *BaseResp `protobuf:"bytes,1,opt,name=base_resp,json=baseResp,proto3" json:"base_resp,omitempty"`
	Movies     []*Movie  `protobuf:"bytes,2,rep,name=movies,proto3" json:"movies,omitempty"`
	NRecommend int64     `protobuf:"varint,3,opt,name=n_recommend,json=nRecommend,proto3" json:"n_recommend,omitempty"` // 系统总的推荐数量, 用于判定是否有下一页
}

func (x *RecommendResp) Reset() {
	*x = RecommendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_movie_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendResp) ProtoMessage() {}

func (x *RecommendResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_movie_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendResp.ProtoReflect.Descriptor instead.
func (*RecommendResp) Descriptor() ([]byte, []int) {
	return file_idl_movie_proto_rawDescGZIP(), []int{5}
}

func (x *RecommendResp) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *RecommendResp) GetMovies() []*Movie {
	if x != nil {
		return x.Movies
	}
	return nil
}

func (x *RecommendResp) GetNRecommend() int64 {
	if x != nil {
		return x.NRecommend
	}
	return 0
}

type MovieDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *MovieDetailReq) Reset() {
	*x = MovieDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_movie_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieDetailReq) ProtoMessage() {}

func (x *MovieDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_movie_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieDetailReq.ProtoReflect.Descriptor instead.
func (*MovieDetailReq) Descriptor() ([]byte, []int) {
	return file_idl_movie_proto_rawDescGZIP(), []int{6}
}

func (x *MovieDetailReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MovieDetailReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MovieDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,1,opt,name=base_resp,json=baseResp,proto3" json:"base_resp,omitempty"`
	Movie    *Movie    `protobuf:"bytes,2,opt,name=movie,proto3" json:"movie,omitempty"`
}

func (x *MovieDetailResp) Reset() {
	*x = MovieDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_movie_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieDetailResp) ProtoMessage() {}

func (x *MovieDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_movie_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieDetailResp.ProtoReflect.Descriptor instead.
func (*MovieDetailResp) Descriptor() ([]byte, []int) {
	return file_idl_movie_proto_rawDescGZIP(), []int{7}
}

func (x *MovieDetailResp) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *MovieDetailResp) GetMovie() *Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

type SearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Page    int64  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Offset  int64  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *SearchReq) Reset() {
	*x = SearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_movie_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchReq) ProtoMessage() {}

func (x *SearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_movie_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchReq.ProtoReflect.Descriptor instead.
func (*SearchReq) Descriptor() ([]byte, []int) {
	return file_idl_movie_proto_rawDescGZIP(), []int{8}
}

func (x *SearchReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type MovieSearchEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsEntryType MovieSearchEntryType `protobuf:"varint,1,opt,name=ms_entry_type,json=msEntryType,proto3,enum=MovieSearchEntryType" json:"ms_entry_type,omitempty"`
	Movie       *Movie               `protobuf:"bytes,2,opt,name=movie,proto3" json:"movie,omitempty"`
}

func (x *MovieSearchEntry) Reset() {
	*x = MovieSearchEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_movie_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieSearchEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieSearchEntry) ProtoMessage() {}

func (x *MovieSearchEntry) ProtoReflect() protoreflect.Message {
	mi := &file_idl_movie_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieSearchEntry.ProtoReflect.Descriptor instead.
func (*MovieSearchEntry) Descriptor() ([]byte, []int) {
	return file_idl_movie_proto_rawDescGZIP(), []int{9}
}

func (x *MovieSearchEntry) GetMsEntryType() MovieSearchEntryType {
	if x != nil {
		return x.MsEntryType
	}
	return MovieSearchEntryType_MOVIE_SEARCH_ENTRY_TYPE_TITLE
}

func (x *MovieSearchEntry) GetMovie() *Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

type SearchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp           `protobuf:"bytes,1,opt,name=base_resp,json=baseResp,proto3" json:"base_resp,omitempty"`
	Movies   []*MovieSearchEntry `protobuf:"bytes,2,rep,name=movies,proto3" json:"movies,omitempty"`
	NSearch  int64               `protobuf:"varint,3,opt,name=n_search,json=nSearch,proto3" json:"n_search,omitempty"` // 搜索结果总数, 用于判定是否有下一页
}

func (x *SearchResp) Reset() {
	*x = SearchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_movie_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResp) ProtoMessage() {}

func (x *SearchResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_movie_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResp.ProtoReflect.Descriptor instead.
func (*SearchResp) Descriptor() ([]byte, []int) {
	return file_idl_movie_proto_rawDescGZIP(), []int{10}
}

func (x *SearchResp) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *SearchResp) GetMovies() []*MovieSearchEntry {
	if x != nil {
		return x.Movies
	}
	return nil
}

func (x *SearchResp) GetNSearch() int64 {
	if x != nil {
		return x.NSearch
	}
	return 0
}

type FeedbackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FbType   FeedbackType `protobuf:"varint,1,opt,name=fb_type,json=fbType,proto3,enum=FeedbackType" json:"fb_type,omitempty"`
	SourceId string       `protobuf:"bytes,2,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	UserId   string       `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *FeedbackReq) Reset() {
	*x = FeedbackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_movie_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedbackReq) ProtoMessage() {}

func (x *FeedbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_movie_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedbackReq.ProtoReflect.Descriptor instead.
func (*FeedbackReq) Descriptor() ([]byte, []int) {
	return file_idl_movie_proto_rawDescGZIP(), []int{11}
}

func (x *FeedbackReq) GetFbType() FeedbackType {
	if x != nil {
		return x.FbType
	}
	return FeedbackType_FEEDBACK_TYPE_MOVIE
}

func (x *FeedbackReq) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *FeedbackReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FeedbackResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,1,opt,name=base_resp,json=baseResp,proto3" json:"base_resp,omitempty"`
}

func (x *FeedbackResp) Reset() {
	*x = FeedbackResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_movie_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedbackResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedbackResp) ProtoMessage() {}

func (x *FeedbackResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_movie_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedbackResp.ProtoReflect.Descriptor instead.
func (*FeedbackResp) Descriptor() ([]byte, []int) {
	return file_idl_movie_proto_rawDescGZIP(), []int{12}
}

func (x *FeedbackResp) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type ModifyMovieRatingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId   string  `protobuf:"bytes,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	NUpdate   float64 `protobuf:"fixed64,2,opt,name=n_update,json=nUpdate,proto3" json:"n_update,omitempty"`
	IsNewUser bool    `protobuf:"varint,3,opt,name=is_new_user,json=isNewUser,proto3" json:"is_new_user,omitempty"`
}

func (x *ModifyMovieRatingReq) Reset() {
	*x = ModifyMovieRatingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_movie_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyMovieRatingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyMovieRatingReq) ProtoMessage() {}

func (x *ModifyMovieRatingReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_movie_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyMovieRatingReq.ProtoReflect.Descriptor instead.
func (*ModifyMovieRatingReq) Descriptor() ([]byte, []int) {
	return file_idl_movie_proto_rawDescGZIP(), []int{13}
}

func (x *ModifyMovieRatingReq) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

func (x *ModifyMovieRatingReq) GetNUpdate() float64 {
	if x != nil {
		return x.NUpdate
	}
	return 0
}

func (x *ModifyMovieRatingReq) GetIsNewUser() bool {
	if x != nil {
		return x.IsNewUser
	}
	return false
}

type ModifyMovieRatingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,1,opt,name=base_resp,json=baseResp,proto3" json:"base_resp,omitempty"`
}

func (x *ModifyMovieRatingResp) Reset() {
	*x = ModifyMovieRatingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_movie_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyMovieRatingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyMovieRatingResp) ProtoMessage() {}

func (x *ModifyMovieRatingResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_movie_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyMovieRatingResp.ProtoReflect.Descriptor instead.
func (*ModifyMovieRatingResp) Descriptor() ([]byte, []int) {
	return file_idl_movie_proto_rawDescGZIP(), []int{14}
}

func (x *ModifyMovieRatingResp) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

var File_idl_movie_proto protoreflect.FileDescriptor

var file_idl_movie_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x69, 0x64, 0x6c, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x3a, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x15, 0x0a,
	0x06, 0x65, 0x72, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x4e, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x3f, 0x0a,
	0x0b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x92,
	0x01, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x0c, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x52, 0x0b, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x61, 0x67, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x61, 0x67, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x0b,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x90, 0x03, 0x0a, 0x05, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x27, 0x0a, 0x0c,
	0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x48, 0x03, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a,
	0x0e, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x53, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x78, 0x0a, 0x0d, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x09,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x06, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x22, 0x39, 0x0a, 0x0e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x57, 0x0a, 0x0f, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x05, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x52, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x22, 0x51, 0x0a, 0x09, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x6b, 0x0a, 0x10,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x39, 0x0a, 0x0d, 0x6d, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b,
	0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x52, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x22, 0x7a, 0x0a, 0x0a, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x29, 0x0a, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x5f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x6b, 0x0a, 0x0b, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x07, 0x66, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x66, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x36, 0x0a, 0x0c, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x26, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6c, 0x0a, 0x14, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x07, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6e,
	0x65, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x22, 0x3f, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x26, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2a, 0x95, 0x01, 0x0a, 0x13, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x41, 0x47, 0x10, 0x00,
	0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x5f, 0x52, 0x45,
	0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x4f, 0x56, 0x49, 0x45, 0x10,
	0x01, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0x02,
	0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x5f, 0x52, 0x45,
	0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x4f, 0x50, 0x5f, 0x4b, 0x10,
	0x03, 0x2a, 0x5d, 0x0a, 0x14, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x4f, 0x56,
	0x49, 0x45, 0x5f, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e,
	0x4d, 0x4f, 0x56, 0x49, 0x45, 0x5f, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x5f, 0x45, 0x4e, 0x54,
	0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x10, 0x01,
	0x2a, 0x43, 0x0a, 0x0c, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x13, 0x46, 0x45, 0x45, 0x44, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4d, 0x4f, 0x56, 0x49, 0x45, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x45, 0x45,
	0x44, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47,
	0x4f, 0x52, 0x59, 0x10, 0x01, 0x32, 0x9e, 0x02, 0x0a, 0x0c, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x12, 0x0d, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0f, 0x2e, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x29, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x73, 0x12, 0x0a, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x11,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x12, 0x0c, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a,
	0x0d, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x44, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x69, 0x64, 0x6c, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_idl_movie_proto_rawDescOnce sync.Once
	file_idl_movie_proto_rawDescData = file_idl_movie_proto_rawDesc
)

func file_idl_movie_proto_rawDescGZIP() []byte {
	file_idl_movie_proto_rawDescOnce.Do(func() {
		file_idl_movie_proto_rawDescData = protoimpl.X.CompressGZIP(file_idl_movie_proto_rawDescData)
	})
	return file_idl_movie_proto_rawDescData
}

var file_idl_movie_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_idl_movie_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_idl_movie_proto_goTypes = []interface{}{
	(RecommendReasonType)(0),      // 0: RecommendReasonType
	(MovieSearchEntryType)(0),     // 1: MovieSearchEntryType
	(FeedbackType)(0),             // 2: FeedbackType
	(*BaseResp)(nil),              // 3: BaseResp
	(*Participant)(nil),           // 4: Participant
	(*RecommendReason)(nil),       // 5: RecommendReason
	(*Movie)(nil),                 // 6: Movie
	(*RecommendReq)(nil),          // 7: RecommendReq
	(*RecommendResp)(nil),         // 8: RecommendResp
	(*MovieDetailReq)(nil),        // 9: MovieDetailReq
	(*MovieDetailResp)(nil),       // 10: MovieDetailResp
	(*SearchReq)(nil),             // 11: SearchReq
	(*MovieSearchEntry)(nil),      // 12: MovieSearchEntry
	(*SearchResp)(nil),            // 13: SearchResp
	(*FeedbackReq)(nil),           // 14: FeedbackReq
	(*FeedbackResp)(nil),          // 15: FeedbackResp
	(*ModifyMovieRatingReq)(nil),  // 16: ModifyMovieRatingReq
	(*ModifyMovieRatingResp)(nil), // 17: ModifyMovieRatingResp
}
var file_idl_movie_proto_depIdxs = []int32{
	6,  // 0: RecommendReason.movie_reason:type_name -> Movie
	0,  // 1: RecommendReason.reason_type:type_name -> RecommendReasonType
	4,  // 2: Movie.participant:type_name -> Participant
	5,  // 3: Movie.reason:type_name -> RecommendReason
	3,  // 4: RecommendResp.base_resp:type_name -> BaseResp
	6,  // 5: RecommendResp.movies:type_name -> Movie
	3,  // 6: MovieDetailResp.base_resp:type_name -> BaseResp
	6,  // 7: MovieDetailResp.movie:type_name -> Movie
	1,  // 8: MovieSearchEntry.ms_entry_type:type_name -> MovieSearchEntryType
	6,  // 9: MovieSearchEntry.movie:type_name -> Movie
	3,  // 10: SearchResp.base_resp:type_name -> BaseResp
	12, // 11: SearchResp.movies:type_name -> MovieSearchEntry
	2,  // 12: FeedbackReq.fb_type:type_name -> FeedbackType
	3,  // 13: FeedbackResp.base_resp:type_name -> BaseResp
	3,  // 14: ModifyMovieRatingResp.base_resp:type_name -> BaseResp
	7,  // 15: MovieService.RecommendMovies:input_type -> RecommendReq
	9,  // 16: MovieService.GetMovieDetail:input_type -> MovieDetailReq
	11, // 17: MovieService.SearchMovies:input_type -> SearchReq
	14, // 18: MovieService.RecommendFeedback:input_type -> FeedbackReq
	16, // 19: MovieService.ModifyMovieRating:input_type -> ModifyMovieRatingReq
	8,  // 20: MovieService.RecommendMovies:output_type -> RecommendResp
	10, // 21: MovieService.GetMovieDetail:output_type -> MovieDetailResp
	13, // 22: MovieService.SearchMovies:output_type -> SearchResp
	15, // 23: MovieService.RecommendFeedback:output_type -> FeedbackResp
	17, // 24: MovieService.ModifyMovieRating:output_type -> ModifyMovieRatingResp
	20, // [20:25] is the sub-list for method output_type
	15, // [15:20] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_idl_movie_proto_init() }
func file_idl_movie_proto_init() {
	if File_idl_movie_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_idl_movie_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_movie_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Participant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_movie_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_movie_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Movie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_movie_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_movie_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_movie_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_movie_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_movie_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_movie_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieSearchEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_movie_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_movie_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedbackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_movie_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedbackResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_movie_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyMovieRatingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_movie_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyMovieRatingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_idl_movie_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_idl_movie_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_idl_movie_proto_goTypes,
		DependencyIndexes: file_idl_movie_proto_depIdxs,
		EnumInfos:         file_idl_movie_proto_enumTypes,
		MessageInfos:      file_idl_movie_proto_msgTypes,
	}.Build()
	File_idl_movie_proto = out.File
	file_idl_movie_proto_rawDesc = nil
	file_idl_movie_proto_goTypes = nil
	file_idl_movie_proto_depIdxs = nil
}
